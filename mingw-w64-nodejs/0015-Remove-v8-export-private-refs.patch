 deps/v8/include/v8-fast-api-calls.h        |  2 +-
 deps/v8/src/compiler/node.cc               |  2 +-
 deps/v8/src/diagnostics/objects-printer.cc | 16 ++++++++--------
 3 files changed, 10 insertions(+), 10 deletions(-)

diff --git a/deps/v8/include/v8-fast-api-calls.h b/deps/v8/include/v8-fast-api-calls.h
index e40f1068..c70808a7 100644
--- a/deps/v8/include/v8-fast-api-calls.h
+++ b/deps/v8/include/v8-fast-api-calls.h
@@ -328,7 +328,7 @@ class CTypeInfo {
 struct FastApiTypedArrayBase {
  public:
   // Returns the length in number of elements.
-  size_t V8_EXPORT length() const { return length_; }
+  size_t length() const { return length_; }
   // Checks whether the given index is within the bounds of the collection.
   void V8_EXPORT ValidateIndex(size_t index) const;
 
diff --git a/deps/v8/src/compiler/node.cc b/deps/v8/src/compiler/node.cc
index b53fa280..bf22bc07 100644
--- a/deps/v8/src/compiler/node.cc
+++ b/deps/v8/src/compiler/node.cc
@@ -506,6 +506,6 @@ bool Node::Uses::empty() const { return begin() == end(); }
 }  // namespace v8
 
 V8_DONT_STRIP_SYMBOL
-V8_EXPORT_PRIVATE extern void _v8_internal_Node_Print(void* object) {
+extern void _v8_internal_Node_Print(void* object) {
   reinterpret_cast<i::compiler::Node*>(object)->Print();
 }
diff --git a/deps/v8/src/diagnostics/objects-printer.cc b/deps/v8/src/diagnostics/objects-printer.cc
index 5d950911..acf373f8 100644
--- a/deps/v8/src/diagnostics/objects-printer.cc
+++ b/deps/v8/src/diagnostics/objects-printer.cc
@@ -3492,18 +3492,18 @@ inline i::Tagged<i::Object> GetObjectFromRaw(void* object) {
 // The following functions are used by our gdb macros.
 //
 V8_DONT_STRIP_SYMBOL
-V8_EXPORT_PRIVATE extern i::Tagged<i::Object> _v8_internal_Get_Object(
+extern i::Tagged<i::Object> _v8_internal_Get_Object(
     void* object) {
   return GetObjectFromRaw(object);
 }
 
 V8_DONT_STRIP_SYMBOL
-V8_EXPORT_PRIVATE extern void _v8_internal_Print_Object(void* object) {
+extern void _v8_internal_Print_Object(void* object) {
   i::Print(GetObjectFromRaw(object));
 }
 
 V8_DONT_STRIP_SYMBOL
-V8_EXPORT_PRIVATE extern void _v8_internal_Print_LoadHandler(void* object) {
+extern void _v8_internal_Print_LoadHandler(void* object) {
 #ifdef OBJECT_PRINT
   i::StdoutStream os;
   i::LoadHandler::PrintHandler(GetObjectFromRaw(object), os);
@@ -3512,7 +3512,7 @@ V8_EXPORT_PRIVATE extern void _v8_internal_Print_LoadHandler(void* object) {
 }
 
 V8_DONT_STRIP_SYMBOL
-V8_EXPORT_PRIVATE extern void _v8_internal_Print_StoreHandler(void* object) {
+extern void _v8_internal_Print_StoreHandler(void* object) {
 #ifdef OBJECT_PRINT
   i::StdoutStream os;
   i::StoreHandler::PrintHandler(GetObjectFromRaw(object), os);
@@ -3521,7 +3521,7 @@ V8_EXPORT_PRIVATE extern void _v8_internal_Print_StoreHandler(void* object) {
 }
 
 V8_DONT_STRIP_SYMBOL
-V8_EXPORT_PRIVATE extern void _v8_internal_Print_Code(void* object) {
+extern void _v8_internal_Print_Code(void* object) {
   i::Address address = reinterpret_cast<i::Address>(object);
   i::Isolate* isolate = i::Isolate::Current();
 
@@ -3557,7 +3557,7 @@ V8_EXPORT_PRIVATE extern void _v8_internal_Print_Code(void* object) {
 }
 
 V8_DONT_STRIP_SYMBOL
-V8_EXPORT_PRIVATE extern void _v8_internal_Print_OnlyCode(void* object,
+extern void _v8_internal_Print_OnlyCode(void* object,
                                                           size_t range_limit) {
   i::Address address = reinterpret_cast<i::Address>(object);
   i::Isolate* isolate = i::Isolate::Current();
@@ -3589,13 +3589,13 @@ V8_EXPORT_PRIVATE extern void _v8_internal_Print_OnlyCode(void* object,
 }
 
 V8_DONT_STRIP_SYMBOL
-V8_EXPORT_PRIVATE extern void _v8_internal_Print_StackTrace() {
+extern void _v8_internal_Print_StackTrace() {
   i::Isolate* isolate = i::Isolate::Current();
   isolate->PrintStack(stdout);
 }
 
 V8_DONT_STRIP_SYMBOL
-V8_EXPORT_PRIVATE extern void _v8_internal_Print_TransitionTree(void* object) {
+extern void _v8_internal_Print_TransitionTree(void* object) {
   i::Tagged<i::Object> o(GetObjectFromRaw(object));
   if (!IsMap(o)) {
     printf("Please provide a valid Map\n");
