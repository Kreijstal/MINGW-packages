diff --git a/deps/v8/third_party/googletest/BUILD.gn b/deps/v8/third_party/googletest/BUILD.gn
index bc82c635..0d3119e5 100644
--- a/deps/v8/third_party/googletest/BUILD.gn
+++ b/deps/v8/third_party/googletest/BUILD.gn
@@ -32,7 +32,7 @@ config("gtest_config") {
     "src/googletest/include",
   ]
 
-  if (is_win) {
+  if (is_msvc) {
     cflags = [ "/wd4800" ]  # Unused variable warning.
   }
 }
diff --git a/deps/v8/third_party/jsoncpp/BUILD.gn b/deps/v8/third_party/jsoncpp/BUILD.gn
index 6324be01..8b425678 100644
--- a/deps/v8/third_party/jsoncpp/BUILD.gn
+++ b/deps/v8/third_party/jsoncpp/BUILD.gn
@@ -12,7 +12,7 @@ config("jsoncpp_config") {
   # declaration flag.
   # This temporary flag allowing clients to update to the new version, and then
   # update to the new StreamWriter and CharReader classes.
-  if (!is_win || is_clang) {
+  if (!is_msvc|| is_clang) {
     cflags_cc = [ "-Wno-deprecated-declarations" ]
   }
 }
@@ -42,7 +42,7 @@ source_set("jsoncpp") {
 
   include_dirs = [ "source/src/lib_json" ]
 
-  if (!is_win || is_clang) {
+  if (!is_msvc || is_clang) {
     cflags_cc = [ "-Wno-implicit-fallthrough" ]
   }
 }
diff --git a/deps/v8/third_party/zlib/BUILD.gn b/deps/v8/third_party/zlib/BUILD.gn
index 8ed0807a..e5070169 100644
--- a/deps/v8/third_party/zlib/BUILD.gn
+++ b/deps/v8/third_party/zlib/BUILD.gn
@@ -38,7 +38,7 @@ config("zlib_internal_config") {
     defines += [ "ZLIB_DEBUG" ]
   }
 
-  if (is_win && !is_clang) {
+  if (is_msvc && !is_clang) {
     # V8 supports building with msvc, these silence some warnings that
     # causes compilation to fail (https://crbug.com/1255096).
     cflags = [
@@ -103,7 +103,7 @@ source_set("zlib_adler32_simd") {
       "adler32_simd.h",
     ]
 
-    if (!is_win || is_clang) {
+    if (!is_msvc || is_clang) {
       cflags = [ "-mssse3" ]
     }
   }
@@ -227,7 +227,7 @@ source_set("zlib_crc32_simd") {
       "crc_folding.c",
     ]
 
-    if (!is_win || is_clang) {
+    if (!is_msvc || is_clang) {
       cflags = [
         "-msse4.2",
         "-mpclmul",
@@ -271,7 +271,7 @@ source_set("zlib_slide_hash_simd") {
 }
 
 config("zlib_warnings") {
-  if (is_clang) {
+  if (is_clang || is_mingw) {
     cflags = [
       "-Wno-deprecated-non-prototype",
       "-Wno-incompatible-pointer-types",
diff --git a/deps/v8/third_party/zlib/cpu_features.c b/deps/v8/third_party/zlib/cpu_features.c
index 64e0428c..8f69b299 100644
--- a/deps/v8/third_party/zlib/cpu_features.c
+++ b/deps/v8/third_party/zlib/cpu_features.c
@@ -9,7 +9,7 @@
 #include "zutil.h"
 
 #include <stdint.h>
-#if defined(_MSC_VER)
+#if defined(_WIN32)
 #include <intrin.h>
 #elif defined(ADLER32_SIMD_SSSE3)
 #include <cpuid.h>
@@ -52,7 +52,7 @@ int ZLIB_INTERNAL x86_cpu_enable_avx512 = 0;
 #include <windows.h>
 #elif defined(ARMV8_OS_IOS)
 #include <sys/sysctl.h>
-#elif !defined(_MSC_VER)
+#elif !defined(_WIN32)
 #include <pthread.h>
 #else
 #error cpu_features.c CPU feature detection in not defined for your platform
@@ -161,7 +161,7 @@ static void _cpu_check_features(void)
     int x86_cpu_has_pclmulqdq;
     int abcd[4];
 
-#ifdef _MSC_VER
+#ifdef _WIN32
     __cpuid(abcd, 1);
 #else
     __cpuid(1, abcd[0], abcd[1], abcd[2], abcd[3]);
