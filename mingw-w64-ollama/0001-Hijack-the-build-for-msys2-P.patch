From c16eebd58d1c017c7c63e6e4986a748bed70052d Mon Sep 17 00:00:00 2001
From: Kreijstal <rainb@tfwno.gf>
Date: Thu, 7 Mar 2024 03:22:25 +0100
Subject: [PATCH] Hijack the build for msys2 :P

---
 llm/ext_server/CMakeLists.txt |  4 ++--
 llm/generate/gen_windows.ps1  | 35 ++++++++++++++++++++++++++++-------
 2 files changed, 30 insertions(+), 9 deletions(-)

diff --git a/llm/ext_server/CMakeLists.txt b/llm/ext_server/CMakeLists.txt
index dd1831f..9175a1b 100644
--- a/llm/ext_server/CMakeLists.txt
+++ b/llm/ext_server/CMakeLists.txt
@@ -12,7 +12,7 @@ target_include_directories(${TARGET} PRIVATE ../..)
 target_include_directories(${TARGET} PRIVATE ../../..)
 target_compile_features(${TARGET} PRIVATE cxx_std_11)
 target_compile_definitions(${TARGET} PUBLIC LLAMA_SERVER_LIBRARY=1)
-target_link_libraries(${TARGET} PRIVATE ggml llava common )
+target_link_libraries(${TARGET} PRIVATE ggml llava common wsock32 ws2_32 )
 set_target_properties(${TARGET} PROPERTIES POSITION_INDEPENDENT_CODE ON)
 target_compile_definitions(${TARGET} PRIVATE SERVER_VERBOSE=$<BOOL:${LLAMA_SERVER_VERBOSE}>)
 install(TARGETS ext_server LIBRARY)
@@ -22,4 +22,4 @@ if (CUDAToolkit_FOUND)
     if (WIN32)
         target_link_libraries(${TARGET} PRIVATE nvml)
     endif()
-endif()
\ No newline at end of file
+endif()
diff --git a/llm/generate/gen_windows.ps1 b/llm/generate/gen_windows.ps1
index e031342..1f1c2d1 100644
--- a/llm/generate/gen_windows.ps1
+++ b/llm/generate/gen_windows.ps1
@@ -5,7 +5,7 @@ $ErrorActionPreference = "Stop"
 function init_vars {
     $script:SRC_DIR = $(resolve-path "..\..\")
     $script:llamacppDir = "../llama.cpp"
-    $script:cmakeDefs = @("-DBUILD_SHARED_LIBS=on", "-DLLAMA_NATIVE=off",  "-A", "x64")
+    $script:cmakeDefs = @("-DBUILD_SHARED_LIBS=on", "-DLLAMA_NATIVE=off")
     $script:cmakeTargets = @("ext_server")
     $script:ARCH = "amd64" # arm not yet supported.
     if ($env:CGO_CFLAGS -contains "-g") {
@@ -90,18 +90,39 @@ function build {
     & cmake --build $script:buildDir --config $script:config ($script:cmakeTargets | ForEach-Object { "--target", $_ })
     if ($LASTEXITCODE -ne 0) { exit($LASTEXITCODE)}
 }
-
 function install {
+    Write-Host "Installing ${script:buildDir}"
     rm -ea 0 -recurse -force -path "${script:buildDir}/lib"
     md "${script:buildDir}/lib" -ea 0 > $null
-    cp "${script:buildDir}/bin/${script:config}/ext_server.dll" "${script:buildDir}/lib"
-    cp "${script:buildDir}/bin/${script:config}/llama.dll" "${script:buildDir}/lib"
-    # Display the dll dependencies in the build log
-    if ($script:DUMPBIN -ne $null) {
-        & "$script:DUMPBIN" /dependents "${script:buildDir}/bin/${script:config}/ext_server.dll" | select-string ".dll"
+
+    $extServerDllPath = "${script:buildDir}/bin/${script:config}/ext_server.dll"
+    $extServerDllPathWithoutConfig = "${script:buildDir}/bin/libext_server.dll"
+
+    if (Test-Path $extServerDllPath) {
+        cp $extServerDllPath "${script:buildDir}/lib"
+        cp "${script:buildDir}/bin/${script:config}/llama.dll" "${script:buildDir}/lib"
+
+        # Display the dll dependencies in the build log
+        if ($script:DUMPBIN -ne $null) {
+            & "$script:DUMPBIN" /dependents $extServerDllPath | Select-String ".dll"
+        }
+    }
+    elseif (Test-Path $extServerDllPathWithoutConfig) {
+        cp $extServerDllPathWithoutConfig "${script:buildDir}/lib"
+        cp "${script:buildDir}/bin/libllama.dll" "${script:buildDir}/lib"
+
+        # Display the dll dependencies in the build log
+        if ($script:DUMPBIN -ne $null) {
+            & "$script:DUMPBIN" /dependents $extServerDllPathWithoutConfig | Select-String ".dll"
+        }
+    }
+    else {
+        Write-Host "ext_server.dll not found in ${script:buildDir}/bin/${script:config} or ${script:buildDir}/bin"
+        Write-Error "Installation failed."
     }
 }
 
+
 function sign {
     if ("${env:KEY_CONTAINER}") {
         write-host "Signing ${script:buildDir}/lib/*.dll"
-- 
2.43.2

